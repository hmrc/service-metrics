# Copyright 2023 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

# This is the main configuration file for the application.
# ~~~~~

appName = service-metrics

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.audit.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.audit.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.backend.BackendModule"

# Default http client
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"

# HttpV2 client
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientV2Module"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.backend.http.JsonErrorHandler"

# Play Modules
play.modules.enabled += "uk.gov.hmrc.servicemetrics.config.Module"

play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {
  # 300 is the default, you may need to change this according to your needs
  confidenceLevel = 300

  uk.gov.hmrc.servicemetrics.controllers.MetricController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }
}

# TODO: remove this once we've added the elasticsearch SAN to the cert
play.ws.ssl.loose.acceptAnyCertificate = true

# Microservice specific config

mongodb {
  uri = "mongodb://localhost:27017/service-metrics"
}

microservice {
  services {
    carbon-api {
      host = "localhost"
      port = 8461
    }

    elasticsearch {
      host                                       = "localhost"
      port                                       = 9200
      mongodb-index                              = "logstash-*"
      username                                   = "changeme"
      development.password                       = "Y2hhbmdlbWU="
      integration.password                       = "Y2hhbmdlbWU="
      qa.password                                = "Y2hhbmdlbWU="
      staging.password                           = "Y2hhbmdlbWU="
      externaltest.password                      = "Y2hhbmdlbWU="
      production.password                        = "Y2hhbmdlbWU="
      long-running-query-in-milliseconds         = 3000
      non-performant-queries-interval-in-minutes = 1440
    }

    platops-github-proxy {
       host = "localhost"
       port = 8466
    }

    slack-notifications {
      host = "localhost"
      port = 8866
    }

    teams-and-repositories {
      host = "localhost"
      port = 9015
    }
  }
}

clickhouse.development.url  = "http://localhost:8461/clickhouse"
clickhouse.qa.url           = "http://localhost:8461/clickhouse"
clickhouse.staging.url      = "http://localhost:8461/clickhouse"
clickhouse.externaltest.url = "http://localhost:8461/clickhouse"
clickhouse.production.url   = "http://localhost:8461/clickhouse"

mongo-metrics-scheduler {
  enabled      = false
  interval     = 1.hour
  initialDelay = 1.second
}

mongo-notifications-scheduler {
  enabled      = false
  interval     = 1.day
  initialDelay = 1.second
}

# How many days between each data point in the `mongoCollectionSizesHistory` collection
# 1 == every day
mongo-collection-size-history.frequency.days = 1


alerts {
  slack {
    basicAuth {
      username = test
      password = test
    }
    enabled             = false
    notification-period = 1.days
    throttling-period   = 7.days

    kibana {
      baseUrl = "http://logs.${env}.local"
      links  = {
        "Slow Running Query"           = ${alerts.slack.kibana.baseUrl}"/app/discover#/?_g=(filters:!(),refreshInterval:(pause:!t,value:0),time:(from:now-15m,to:now))&_a=(columns:!(collection,database,mongo_db,operation,duration,scan),filters:!(),grid:(columns:(operation:(width:667))),hideChart:!f,index:match_all_logstash_ingested_logs_kibana_index_pattern,interval:auto,query:(language:lucene,query:'type:mongodb%20AND%20duration:>3000%20AND%20database:${service}'),sort:!(!('@timestamp',desc)))"
        "Non Indexed Collection Query" = ${alerts.slack.kibana.baseUrl}"/app/discover#/?_g=(filters:!(),refreshInterval:(pause:!t,value:0),time:(from:now-15m,to:now))&_a=(columns:!(collection,database,mongo_db,operation,duration,scan),filters:!(('$state':(store:appState),meta:(alias:!n,disabled:!f,index:match_all_logstash_ingested_logs_kibana_index_pattern,key:duration,negate:!t,params:(query:286),type:phrase),query:(match_phrase:(duration:286)))),grid:(columns:('@timestamp':(width:224),operation:(width:653))),hideChart:!f,index:match_all_logstash_ingested_logs_kibana_index_pattern,interval:auto,query:(language:lucene,query:'type:mongodb%20AND%20scan:%20COLLSCAN%20AND%20NOT%20mongo_db:%20backup_mongodb%20AND%20database:%20${service}'),sort:!(!('@timestamp',desc)))"
      }
    }
  }
}
